// === ОПЕРАТОРЫ ===
let a = 10;
let b = 5;
let c = 30;

// Простые операции присваивания
c += a; // эквивалентно c = c + a
c -= a; // эквивалентно c = c - a
c *= a; // эквивалентно c = c * a
c /= a; // эквивалентно c = c / a

// Возведение в степень
c = 4 ** 2; // возведём число 4 во вторую степень

console.log("Результат последней операции:", c);

// === ТИПЫ ДАННЫХ ===
const age = 29;          // Number
const name = 'Alex';     // String
const isProgrammer = true; // Boolean
let x;                   // undefined
const y = null;           // null - особый тип данных

// Проверяем тип данных
console.log('Тип переменной name:', typeof name); // string
console.log('Тип переменной NaN:', typeof NaN);   // number

// === ЛОГИЧЕСКИЕ И ПРИОРИТЕТНЫЕ ОПЕРАЦИИ ===
const fullAge = 29;
const birthYear = 1993;
const currentYear = 2025;

// Операция сравнения возраста
const isFullAge = currentYear - birthYear >= fullAge;
console.log('Является ли возраст полным?', isFullAge); // выведет true

// Примеры проверки равенства
const num1 = 42;
const num2 = '42';

console.log('Числа равны:', num1 == num2); // вернет true, поскольку JS автоматически приведет строку к числу

// Лучше использовать строгое сравнение ===
console.log('Строгое сравнение чисел:', num1 === num2); // вернет false, потому что типы разные

// === РЕЗЮМЕ ===
// Для численных выражений рекомендуется использовать операторы <=, >=, !=
// Использование оператора === предпочтительнее, чтобы избежать неожиданного поведения при сравнении.


// Массивы в JS
